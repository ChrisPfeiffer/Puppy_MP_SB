// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using SharedPCL;
using System.Xml;
using System.Collections.Generic;
using System.Collections;
using System.IO;


namespace speechTherapy
{
	public partial class imagePgViewController : UIViewController
	{

		List<Pair> pairList { get; set; }
		private int pairIndex;

		//public speechTherapyViewController Delegate { get; set; }
		public UIViewController Delegate{ get; set; }

		public imagePgViewController (IntPtr handle) : base (handle)
		{

		}

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			this.ARView.Hidden = true;

			//shuffle the list of pairs
			pairList = HelperFunctions.Shuffle (pairList);

			pairIndex = 0;
			displayPair (pairIndex);


			this.btnNext.TouchUpInside += theNextClick;
			this.btnRecordAudio.TouchUpInside += launchRecordAudio;
			this.btnDoneAR.TouchUpInside += hideRecordAudio;


		}

		private void theNextClick(Object sender, EventArgs ea)
		{
			pairIndex++;
			if(pairList.Count > pairIndex)
			{
				//display the next image

				displayPair(pairIndex);

			}
			else{

				pairIndex = 0;
				displayPair(pairIndex);
			}
		}

		private void launchRecordAudio(Object sender, EventArgs ea)
		{
			this.ARView.Hidden = false;
		}

		private void hideRecordAudio(Object send, EventArgs ea)
		{
			this.ARView.Hidden = true;
		}

		private void displayPair(int index)
		{
			String leftImagePath = "Photos/" + pairList [index].leftImageName + ".png";
			String rightImagePath = "Photos/" + pairList [index].rightImageName + ".png";

			if(File.Exists(leftImagePath))
			{
				using(UIImage leftImage = UIImage.FromFile(leftImagePath))
				{
					this.leftImageOutlet.Image = leftImage;
				}
			}
			else
			{
				using (UIImage leftImage = UIImage.FromFile ("Photos/no_image.jpg")) {
					this.leftImageOutlet.Image = leftImage;
				}
			}

			if(File.Exists(rightImagePath))
			{
				using(UIImage rightImage =  UIImage.FromFile (rightImagePath))
				{
					this.rightImageOutlet.Image = rightImage;
				}
			}
			else{
				using(UIImage rightImage = UIImage.FromFile ("Photos/no_image.jpg"))
				{
					this.rightImageOutlet.Image = rightImage;
				}
			}

			this.leftLabel.Text = pairList [index].leftImageName;
			this.rightLabel.Text = pairList [index].rightImageName;

		} 

		public void setPairList(UIViewController vc, List<Pair> inputPairList)
		{
			Delegate = vc;
			pairList = inputPairList;
		}

		public void nextButtonClicked(MonoTouch.Foundation.NSObject sender)
		{ 
			pairIndex++;
			if(pairList.Count > pairIndex)
			{
				//display the next image

				displayPair(pairIndex);

			}
			else{

				pairIndex = 0;
				displayPair(pairIndex);
			}
		}



		
		
	}
}
